<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Moonstreet notes</title>
    <link>https://www.moonstreet.nl/tags/golang/</link>
    <description>Recent content in golang on Moonstreet notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>yourname@example.com (yourname)</managingEditor>
    <webMaster>yourname@example.com (yourname)</webMaster>
    <copyright>(c) 2019 Jacqueline</copyright>
    <lastBuildDate>Sun, 10 Feb 2019 09:43:32 +0100</lastBuildDate>
    
	<atom:link href="https://www.moonstreet.nl/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go Webserver</title>
      <link>https://www.moonstreet.nl/2019/02/10/go-webserver/</link>
      <pubDate>Sun, 10 Feb 2019 09:43:32 +0100</pubDate>
      <author>yourname@example.com (yourname)</author>
      <guid>https://www.moonstreet.nl/2019/02/10/go-webserver/</guid>
      <description>The last Golang post was a little bit lame so let&amp;rsquo;s do something more interesting now. Let&amp;rsquo;s create a webserver.
To create a simple webserver, we need:
 a function that can serve a page in browser (using http obviously) it should listen at a port it should respond to (handle) incoming requests it should be able to write content to the page  First create a new project structure:</description>
    </item>
    
    <item>
      <title>Getting started with Golang</title>
      <link>https://www.moonstreet.nl/2019/02/09/getting-started-with-golang/</link>
      <pubDate>Sat, 09 Feb 2019 15:16:45 +0100</pubDate>
      <author>yourname@example.com (yourname)</author>
      <guid>https://www.moonstreet.nl/2019/02/09/getting-started-with-golang/</guid>
      <description>This is yet another getting started note. This time I am trying to code in Golang.
Why, would you ask?
Obviously because of its mascotte:
Installing Golang Download Golang here https://golang.org/dl/. I am on Ubuntu, so next step is to simply unpack the executable to /usr/local.
sudo tar -C /usr/local -xzf go1.11.5.linux-amd64.tar.gz  Then add Go to your path in your profile (in my case it would be in ~/.</description>
    </item>
    
  </channel>
</rss>