<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>K3s on Moonstreet</title>
    <link>https://www.moonstreet.nl/tags/k3s/</link>
    <description>Recent content in K3s on Moonstreet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Mon, 28 Dec 2020 17:10:13 +0100</lastBuildDate><atom:link href="https://www.moonstreet.nl/tags/k3s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create a read-only user in Kubernetes</title>
      <link>https://www.moonstreet.nl/post/kubernetes-readonly/</link>
      <pubDate>Mon, 28 Dec 2020 17:10:13 +0100</pubDate>
      
      <guid>https://www.moonstreet.nl/post/kubernetes-readonly/</guid>
      <description>
        
          
            &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/authentication/&#34;&gt;Normal users are assumed to be managed by an outside, independent service&lt;/a&gt;. Kubernetes does not have objects which represent normal user accounts. Normal users cannot be added to a cluster through an API call. However, any user that presents a valid certificate signed by the cluster&#39;s certificate authority (CA) is considered authenticated.
So we can create a user with read-only access to the cluster, and hand the kube config file over to that that user.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Install the Nginx ingress controller on K3s - or Kind - and deploy a web app</title>
      <link>https://www.moonstreet.nl/post/k3s-with-ingress/</link>
      <pubDate>Sat, 26 Dec 2020 16:33:46 +0100</pubDate>
      
      <guid>https://www.moonstreet.nl/post/k3s-with-ingress/</guid>
      <description>
        
          
            &lt;p&gt;Here is how to quickly install Kubernetes with ingress on your laptop.
I use this to test and create operators with the &lt;a href=&#34;https://operatorframework.io/&#34;&gt;Operator Framework&lt;/a&gt;. Still learning though.&lt;/p&gt;
&lt;p&gt;I was first using &lt;a href=&#34;https://k3s.io/&#34;&gt;K3s&lt;/a&gt; but then I discovered &lt;a href=&#34;https://kind.sigs.k8s.io/&#34;&gt;Kind&lt;/a&gt; which seems to be even faster, deployment wise. Also it leaves a smaller footprint because it runs in a Docker container. (Didn&#39;t manage to run it with podman yet). So I quickly added a paragraph about Kind if you scroll down this post.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>K3s on a Centos vm</title>
      <link>https://www.moonstreet.nl/post/k3s-libvirt/</link>
      <pubDate>Sun, 27 Sep 2020 09:17:02 +0200</pubDate>
      
      <guid>https://www.moonstreet.nl/post/k3s-libvirt/</guid>
      <description>
        
          
            &lt;p&gt;This post is about installing lightweight Kubernetes (K3s) on our new vm.&lt;/p&gt;
&lt;h2 id=&#34;k3s&#34;&gt;K3s&lt;/h2&gt;
&lt;p&gt;The previous post was all about being able to install Kubernetes quickly. For that I will use &lt;a href=&#34;https://k3s.io/&#34;&gt;k3s&lt;/a&gt; from Rancher because it is fast.
Let&#39;s go!&lt;/p&gt;
&lt;h2 id=&#34;prepare&#34;&gt;Prepare&lt;/h2&gt;
&lt;p&gt;We do this for testing so we can safely disable the firewall and SELinux on our CentOS vm.
This is because SELinux is still experimental in K3s.
We also need to enable ssh password authentication so we can issue scp commands from our host machine.
For this we just add the following lines to the extra script part of our Vagrantfile:&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
